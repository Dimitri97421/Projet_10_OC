{"ast":null,"code":"var _jsxFileName = \"/home/dimitri/OpenClassrooms/Projet_10/src/containers/Events/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  _s();\n\n  const {\n    data,\n    error\n  } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  console.log(data);\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * PER_PAGE;\n    const endIndex = startIndex + PER_PAGE;\n    const filtered = !type ? (data === null || data === void 0 ? void 0 : data.events) || [] : ((data === null || data === void 0 ? void 0 : data.events) || []).filter(event => event.type === type);\n    const paginatedEvents = filtered.slice(startIndex, endIndex);\n    setFilteredEvents(paginatedEvents);\n  }, [data, type, currentPage]);\n\n  const changeType = evtType => {\n    setCurrentPage(1);\n    setType(evtType);\n  };\n\n  const pageNumber = Math.floor(((filteredEvents === null || filteredEvents === void 0 ? void 0 : filteredEvents.length) || 0) / PER_PAGE) + 1;\n  const typeList = new Set(data === null || data === void 0 ? void 0 : data.events.map(event => event.type));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error occured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), data === null ? \"loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"SelectTitle\",\n        children: \"Cat\\xE9gories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        selection: Array.from(typeList),\n        onChange: value => value ? changeType(value) : changeType(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"events\",\n        className: \"ListContainer\",\n        children: filteredEvents.map(event => /*#__PURE__*/_jsxDEV(Modal, {\n          Content: /*#__PURE__*/_jsxDEV(ModalEvent, {\n            event: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 46\n          }, this),\n          children: _ref => {\n            let {\n              setIsOpened\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(EventCard, {\n              onClick: () => setIsOpened(true),\n              imageSrc: event.cover,\n              title: event.title,\n              date: new Date(event.date),\n              label: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this);\n          }\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Pagination\",\n        children: [...Array(pageNumber || 0)].map((_, n) =>\n        /*#__PURE__*/\n        // eslint-disable-next-line react/no-array-index-key\n        _jsxDEV(\"a\", {\n          href: \"#events\",\n          onClick: () => setCurrentPage(n + 1),\n          children: n + 1\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(EventList, \"VOc+m9Z4WfoDUm8I9tHtRvO262o=\", false, function () {\n  return [useData];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/dimitri/OpenClassrooms/Projet_10/src/containers/Events/index.js"],"names":["useState","useEffect","EventCard","Select","useData","Modal","ModalEvent","PER_PAGE","EventList","data","error","type","setType","currentPage","setCurrentPage","filteredEvents","setFilteredEvents","console","log","startIndex","endIndex","filtered","events","filter","event","paginatedEvents","slice","changeType","evtType","pageNumber","Math","floor","length","typeList","Set","map","Array","from","value","setIsOpened","cover","title","Date","date","id","_","n"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\n\nimport \"./style.css\";\n\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  const { data, error } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  console.log(data)\n\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * PER_PAGE;\n    const endIndex = startIndex + PER_PAGE;\n\n    const filtered = (!type ? (data?.events || []) : (data?.events || []).filter(event => event.type === type));\n\n    const paginatedEvents = filtered.slice(startIndex, endIndex);\n    setFilteredEvents(paginatedEvents);\n  }, [data, type, currentPage]);\n\n  const changeType = (evtType) => {\n    setCurrentPage(1);\n    setType(evtType);\n  };\n  \n  const pageNumber = Math.floor((filteredEvents?.length || 0) / PER_PAGE) + 1;\n  const typeList = new Set(data?.events.map((event) => event.type));\n  return (\n    <>\n      {error && <div>An error occured</div>}\n      {data === null ? (\n        \"loading\"\n      ) : (\n        <>\n          <h3 className=\"SelectTitle\">Cat√©gories</h3>\n          <Select\n            selection={Array.from(typeList)}\n            onChange={(value) => (value ? changeType(value) : changeType(null))}\n          />\n          <div id=\"events\" className=\"ListContainer\">\n            {filteredEvents.map((event) => (\n              <Modal key={event.id} Content={<ModalEvent event={event} />}>\n                {({ setIsOpened }) => (\n                  <EventCard\n                    onClick={() => setIsOpened(true)}\n                    imageSrc={event.cover}\n                    title={event.title}\n                    date={new Date(event.date)}\n                    label={event.type}\n                  />\n                )}\n              </Modal>\n            ))}\n          </div>\n          <div className=\"Pagination\">\n            {[...Array(pageNumber || 0)].map((_, n) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <a key={n} href=\"#events\" onClick={() => setCurrentPage(n + 1)}>\n                {n + 1}\n              </a>\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EventList;\n"]},"metadata":{},"sourceType":"module"}