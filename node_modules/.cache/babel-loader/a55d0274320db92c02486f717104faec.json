{"ast":null,"code":"var _jsxFileName = \"/home/dimitri/OpenClassrooms/Projet_10/src/containers/Events/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  _s();\n\n  const {\n    data,\n    error\n  } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const filteredEvents = ((!type ? data === null || data === void 0 ? void 0 : data.events : data === null || data === void 0 ? void 0 : data.events) || []).filter((event, index) => {\n    if ((currentPage - 1) * PER_PAGE <= index && PER_PAGE * currentPage > index) {\n      return true;\n    }\n\n    return false;\n  });\n\n  const changeType = evtType => {\n    setCurrentPage(1);\n    setType(evtType);\n  };\n\n  useEffect(() => {\n    if (prevTypeRef.current !== type) {\n      console.log(type); // Affiche la nouvelle valeur de type si elle a changé\n\n      prevTypeRef.current = type; // Met à jour la référence avec la nouvelle valeur\n    }\n  }, [type]); // Exécuté à chaque changement de type\n\n  const pageNumber = Math.floor(((filteredEvents === null || filteredEvents === void 0 ? void 0 : filteredEvents.length) || 0) / PER_PAGE) + 1;\n  const typeList = new Set(data === null || data === void 0 ? void 0 : data.events.map(event => event.type));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error occured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), data === null ? \"loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"SelectTitle\",\n        children: \"Cat\\xE9gories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        selection: Array.from(typeList),\n        onChange: value => changeType(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"events\",\n        className: \"ListContainer\",\n        children: filteredEvents.map(event => /*#__PURE__*/_jsxDEV(Modal, {\n          Content: /*#__PURE__*/_jsxDEV(ModalEvent, {\n            event: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 46\n          }, this),\n          children: _ref => {\n            let {\n              setIsOpened\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(EventCard, {\n              onClick: () => setIsOpened(true),\n              imageSrc: event.cover,\n              title: event.title,\n              date: new Date(event.date),\n              label: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this);\n          }\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Pagination\",\n        children: [...Array(pageNumber || 0)].map((_, n) =>\n        /*#__PURE__*/\n        // eslint-disable-next-line react/no-array-index-key\n        _jsxDEV(\"a\", {\n          href: \"#events\",\n          onClick: () => setCurrentPage(n + 1),\n          children: n + 1\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(EventList, \"OVvqHLbCk7xAHvMqZMDuPeDt83Q=\", false, function () {\n  return [useData];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/dimitri/OpenClassrooms/Projet_10/src/containers/Events/index.js"],"names":["useState","useEffect","EventCard","Select","useData","Modal","ModalEvent","PER_PAGE","EventList","data","error","type","setType","currentPage","setCurrentPage","filteredEvents","events","filter","event","index","changeType","evtType","prevTypeRef","current","console","log","pageNumber","Math","floor","length","typeList","Set","map","Array","from","value","setIsOpened","cover","title","Date","date","id","_","n"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\n\nimport \"./style.css\";\n\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  const { data, error } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const filteredEvents = (\n    (!type\n      ? data?.events\n      : data?.events) || []\n  ).filter((event, index) => {\n    if (\n      (currentPage - 1) * PER_PAGE <= index &&\n      PER_PAGE * currentPage > index\n    ) {\n      return true;\n    }\n    return false;\n  });\n  const changeType = (evtType) => {\n    setCurrentPage(1);\n    setType(evtType);\n  };\n\n  useEffect(() => {\n    if (prevTypeRef.current !== type) {\n      console.log(type); // Affiche la nouvelle valeur de type si elle a changé\n      prevTypeRef.current = type; // Met à jour la référence avec la nouvelle valeur\n    }\n  }, [type]); // Exécuté à chaque changement de type\n\n\n  const pageNumber = Math.floor((filteredEvents?.length || 0) / PER_PAGE) + 1;\n  const typeList = new Set(data?.events.map((event) => event.type));\n  return (\n    <>\n      {error && <div>An error occured</div>}\n      {data === null ? (\n        \"loading\"\n      ) : (\n        <>\n          <h3 className=\"SelectTitle\">Catégories</h3>\n          <Select\n            selection={Array.from(typeList)}\n            onChange={(value) => changeType(value)}\n          />\n          <div id=\"events\" className=\"ListContainer\">\n            {filteredEvents.map((event) => (\n              <Modal key={event.id} Content={<ModalEvent event={event} />}>\n                {({ setIsOpened }) => (\n                  <EventCard\n                    onClick={() => setIsOpened(true)}\n                    imageSrc={event.cover}\n                    title={event.title}\n                    date={new Date(event.date)}\n                    label={event.type}\n                  />\n                )}\n              </Modal>\n            ))}\n          </div>\n          <div className=\"Pagination\">\n            {[...Array(pageNumber || 0)].map((_, n) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <a key={n} href=\"#events\" onClick={() => setCurrentPage(n + 1)}>\n                {n + 1}\n              </a>\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EventList;\n"]},"metadata":{},"sourceType":"module"}